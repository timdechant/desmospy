
<body style="background-color:#2A2A2A;" marginwidth="0px" marginheight="0px">
<style>
.dcg-smart-textarea-container {
    min-height: 24;
}
</style>
<script src="https://www.desmos.com/api/v1.10/calculator.js?apiKey=dcb31709b452b1cf9dc26972add0fda6"></script>
<div id="calculator"></div>
<script>
  var elt = document.getElementById("calculator");
  var calculator = Desmos.GraphingCalculator(elt, options={"showGrid": false, "showXAxis": false, "showYAxis": false});
  calculator.setExpression({"latex": "f = [0, -1, 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11, -12, 12, -13, 13, -14, 14, -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20, 20, -21, 21, -22, 22, -23, 23, -24, 24, -25, 25, -26, 26, -27, 27, -28, 28, -29, 29, -30, 30, -31, 31, -32, 32, -33, -34, 34, -35, 35, -36, 36, -37, 37, -38, 38, -39, 39, -40, 40, -41, 41, -42, 42, -43, 43, -44, -45, 45, -46, 46, -47, 47, -48, 48, -49, 49, -50, 50, -51, 51, -52, 52, -53, 53, -54, 54, -55, 55, -56, 56, -57, 57, -58, 58, -59, 59, -60, 60, -61, 61, -62, 62, -63, 63, -64, 64, -65, 65, -66, 66, -67, 67, -68, 68, -69, 69, -70, 70, -71, 71, -72, -73, 73, -74, 74, -75, 75, -76, 76, -77, -78, -79, -80, 80, -81, 81, -82, 82, -83, 83, -84, 84, -85, 85, 87, -88, 89, -90, 90, -92, 92, -93, 93, -94, 94, -95, 95, -96, 96, -97, 99, -101, 101, -102, 102, -103, 103, -104, -105, 105, -106, 106, -107, 107, 108, -110, -112, 118, -119, 119, 183, 185, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 219]"});
  calculator.setExpression({"latex": "m = [204.25, 23.8, 30.56, 10.24, 36.9, 6.09, 39.73, 6.75, 29.4, 3.82, 28.74, 4.82, 16.58, 5.23, 17.8, 3.56, 9.5, 4.0, 11.41, 0.65, 4.23, 4.26, 9.69, 4.63, 11.28, 1.95, 1.74, 3.93, 5.0, 1.81, 1.21, 1.08, 3.71, 0.43, 4.95, 0.64, 4.38, 3.06, 1.47, 2.47, 4.03, 1.11, 0.87, 1.4, 1.9, 0.43, 1.71, 0.79, 1.2, 1.01, 0.88, 1.78, 1.93, 1.1, 0.61, 1.03, 1.59, 0.87, 0.58, 0.9, 1.36, 1.0, 2.48, 0.59, 1.64, 0.75, 1.72, 0.46, 1.77, 1.08, 0.89, 0.71, 1.0, 0.69, 1.07, 1.47, 0.92, 0.86, 0.23, 1.21, 0.33, 1.11, 0.58, 0.53, 0.4, 0.7, 0.15, 0.24, 0.62, 1.2, 0.74, 0.37, 0.17, 0.91, 0.31, 0.27, 0.29, 0.69, 0.37, 0.91, 0.37, 0.55, 0.58, 0.38, 1.0, 0.31, 0.86, 0.42, 0.33, 0.54, 0.45, 0.5, 0.42, 0.42, 0.37, 0.5, 0.66, 0.24, 0.59, 0.16, 0.3, 0.26, 0.19, 0.13, 0.45, 0.32, 0.4, 0.62, 0.22, 0.4, 0.41, 0.14, 0.12, 0.43, 0.31, 0.32, 0.12, 0.4, 0.48, 0.32, 0.19, 0.58, 0.16, 0.31, 0.26, 0.29, 0.14, 0.19, 0.5, 0.4, 0.51, 0.25, 0.2, 0.22, 0.5, 0.43, 0.35, 0.25, 0.39, 0.32, 0.32, 0.39, 0.11, 0.19, 0.14, 0.15, 0.25, 0.19, 0.24, 0.16, 0.14, 0.34, 0.12, 0.22, 0.23, 0.24, 0.21, 0.31, 0.29, 0.14, 0.27, 0.14, 0.18, 0.11, 0.1, 0.11, 0.13, 0.11, 0.17, 0.2, 0.16, 0.21, 0.16, 0.16, 0.12, 0.1, 0.13, 0.12, 0.12, 0.11, 0.13, 0.17, 0.16, 0.15, 0.16, 0.21, 0.3, 0.65, 0.4, 0.95, 0.42, 1.43, 2.88, 2.39, 0.4, 0.53, 0.42, 0.2, 0.36, 0.45, 0.2, 0.33, 0.17, 0.22, 0.15, 0.13]"});
  calculator.setExpression({"latex": "p = [0.78, -1.38, 1.16, 1.6, -2.45, -2.31, -2.41, -0.32, 2.94, 1.61, 2.33, 0.97, 1.77, 0.05, -2.57, -0.56, 2.71, -3.02, -0.58, 1.66, -3.01, -0.68, 2.89, -0.82, 3.03, -2.21, 0.18, 1.57, 0.35, -0.96, -1.89, 2.76, 2.45, -0.94, -2.68, -0.33, -2.04, 0.2, 2.73, 0.72, 2.87, 0.5, 2.17, -1.69, -1.21, -0.03, -1.54, -0.48, -2.63, -0.02, 2.73, -0.73, -2.11, -2.49, -1.1, 1.82, 1.66, 2.79, 1.26, 0.67, -2.12, -0.28, -2.22, -0.36, -2.79, -0.26, 0.54, -0.98, 0.34, -2.3, 1.16, -3.05, -0.73, -2.3, -1.06, -0.71, 0.3, 0.68, 1.09, 1.51, -3.06, 1.28, -1.19, -0.86, -0.21, -1.17, 0.1, -0.68, 1.69, -0.53, -2.86, 0.64, -2.37, 1.24, 2.66, -2.18, -0.23, -0.91, 0.11, -1.35, -1.21, -2.83, 1.1, -2.81, 1.52, 0.19, 1.67, -0.33, 1.39, 2.76, 0.6, -2.9, 1.74, -2.64, 1.42, 0.84, 2.37, 0.19, -2.4, 2.91, -1.96, -1.23, -2.08, 2.36, 0.15, 3.08, -0.15, -2.74, -1.0, -1.77, -2.18, 2.91, -0.03, 1.07, 1.61, -2.92, 0.88, 2.44, 1.68, 2.34, 2.56, 2.2, 1.07, -2.79, -0.37, -2.32, -0.59, -0.89, 2.58, -0.1, 2.55, -2.92, 0.29, -1.42, -0.92, 2.66, 0.27, 1.91, 2.14, 1.72, 1.85, 0.96, 1.84, 1.4, -0.8, 0.32, 0.15, -0.86, 1.63, 1.35, -3.01, 0.03, -2.48, 0.52, -2.82, 0.86, 2.0, 1.52, 1.64, 1.51, 1.33, 1.25, 2.32, 0.34, 0.08, -2.75, -1.48, -1.23, -1.13, -2.22, -0.12, -3.01, 0.82, -3.12, 1.65, 2.46, 2.17, 2.91, 0.39, 2.52, 1.19, 3.07, -0.91, -0.59, 0.58, 0.18, 2.15, 2.55, -2.55, -1.41, -1.1, 1.69, -1.06, 1.7, 1.96, -2.24, -2.98, 2.89, -1.36, -1.14, 0.36, 1.21, -1.94, 1.02, -2.98, -1.74]"});
  calculator.setExpression({"latex": "n_{f} = 226"});
  calculator.setExpression({"latex": "f_{ohio}{\\left(t,n \\right)} = \\sum_{i=1}^{n} (\\cos{\\left(2 \\pi t {f}[i] + {p}[i] \\right)}, \\sin{\\left(2 \\pi t {f}[i] + {p}[i] \\right)}) {m}[i]"});
  calculator.setExpression({"latex": "t_{c} = 0", "sliderBounds": {"min": 0, "max": 1}, "playing": true});
  calculator.setExpression({"latex": "f_{scarlet} = f_{ohio}{\\left(\\frac{[1...10000]}{5000},n_{f} \\right)}", "points": false, "lines": true, "lineWidth": 5, "color": "#BE0119"});
  calculator.setExpression({"latex": "f_{gray} = f_{ohio}{\\left(t_{c},[1...n_{f}] \\right)}", "points": true, "pointSize": 3, "lines": true, "lineWidth": 1, "color": "#111111"});
  calculator.setExpression({"latex": "f_{dot} = f_{ohio}{\\left(t_{c},n_{f} \\right)}", "pointSize": 20, "pointStyle": "OPEN", "color": "black"});

  state = calculator.getState();
  expr = state.expressions.list;
  folders = {};
  for (folder in folders) {
    expr[folder].type = 'folder';
    expr[folder].title = expr[folder].text;
    expr[folder].collapsed = true;
    for (member of folders[folder]) {
      expr[member].folderId = expr[folder].id;
    }
  }
  calculator.setState(state);
  calculator.setMathBounds({left: -50, right: 350, bottom: -25, top: 275});
</script>
